package smtcl.mocs.pojos.authority;

import org.hibernate.annotations.Fetch;
import org.hibernate.annotations.FetchMode;
import org.hibernate.annotations.GenericGenerator;

import javax.persistence.*;

import java.util.Date;

/**
 * OrgGroup generated by MyEclipse Persistence Tools
 */
@Entity
@Table(name="T_ORG_GROUP")
public class OrgGroup implements java.io.Serializable {
	public final static String ROOT_GROUP = "-999";

	// Fields

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	
	@Id
	@Column(name="ORG_GROUP_ID")
	@GeneratedValue(generator = "system-uuid")
	@GenericGenerator(name = "system-uuid", strategy = "uuid")
	private String orgGroupId;

    @Column(name = "CODE")
    private String code;//Êï∞ÊçÆÁªÑ‰ª£Á†?

	@Column(name="GROUP_NAME")
	private String groupName;

    @Column(name="DESCRIPTION")
    private String description;
	
    @JoinColumn(name="ORG_GROUP_TYPE")
	@ManyToOne (fetch = javax.persistence.FetchType.EAGER)
	@Fetch (FetchMode.JOIN)
    @Transient
	private TypeOrgGroup orgGroupType;

    @Column(name = "STATE")
	private Integer state;

    @JoinColumn(name="CREATE_USER")
    @ManyToOne(fetch = FetchType.EAGER)
    private User createUser;

    @JoinColumn(name="UPDATE_USER")
    @ManyToOne(fetch = FetchType.EAGER)
    private User updateUser;

    @Column(name = "CREATE_TIME")
    private Date createTime;

    @Column(name = "UPDATE_TIME")
    private Date updateTime;

    @Column(name="FLAG")
    private String flag;

	// Constructors

	/** default constructor */
	public OrgGroup() {
	}

	/** full constructor */
	public OrgGroup(String groupName) {
		this.groupName = groupName;
	}

	// Property accessors

	public String getOrgGroupId() {
		return this.orgGroupId;
	}

	public void setOrgGroupId(String orgGroupId) {
		this.orgGroupId = orgGroupId;
	}

	public String getGroupName() {
		return this.groupName;
	}

	public void setGroupName(String groupName) {
		this.groupName = groupName;
	}

    public String getCode() {
        return code;
    }

    public void setCode(String code) {
        this.code = code;
    }

    public String getDescription() {
        return description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    /**
	 * @return the orgGroupType
	 */
	public TypeOrgGroup getOrgGroupType() {
		return orgGroupType;
	}

	/**
	 * @param orgGroupType the orgGroupType to set
	 */
	public void setOrgGroupType(TypeOrgGroup orgGroupType) {
		this.orgGroupType = orgGroupType;
	}

	/**
	 * @return the state
	 */
	public Integer getState() {
		return state;
	}

    /*public String getStateStr() {
        switch (state) {
            case 0  : return "Á¶ÅÁî®";
            case 1  : return "ÂêØÁî®";
            default : return "";
        }
    }*/

	/**
	 * @param state the state to set
	 */
	public void setState(Integer state) {
		this.state = state;
	}

    public User getCreateUser() {
        return createUser;
    }

    public void setCreateUser(User createUser) {
        this.createUser = createUser;
    }

    public User getUpdateUser() {
        return updateUser;
    }

    public void setUpdateUser(User updateUser) {
        this.updateUser = updateUser;
    }

    public Date getCreateTime() {
        return createTime;
    }

    public void setCreateTime(Date createTime) {
        this.createTime = createTime;
    }

    public Date getUpdateTime() {
        return updateTime;
    }

    public void setUpdateTime(Date updateTime) {
        this.updateTime = updateTime;
    }

    public String getFlag() {
        return flag;
    }

    public void setFlag(String flag) {
        this.flag = flag;
    }
}